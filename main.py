# -*- coding: utf-8 -*-
"""API.ipynb

Automatically generated by Colaboratory.

Original file is located at
	https://colab.research.google.com/drive/1W1F4OvxL8pN7sd5_RWuMYYvSSC0QiAK9
"""

# -*- coding: utf-8 -*-
from flask import Flask, render_template, jsonify
import json
import pandas as pd
import numpy as np
import pickle
from sklearn.neighbors import KDTree

app = Flask(__name__)

# Chargement du df
df = pd.read_csv("appli_train_3.csv", index_col="SK_ID_CURR")
df = df.drop("TARGET", axis=1)
# print(df.head(5))
# print(df.columns)
# df1=df.loc[:,['AMT_INCOME_TOTAL','AMT_ANNUITY','AMT_CREDIT','CNT_CHILDREN','CNT_FAM_MEMBERS','CODE_GENDER_F','CODE_GENDER_M','DAYS_BIRTH', 'DAYS_EMPLOYED', 'EXT_SOURCE_3','EXT_SOURCE_2','EXT_SOURCE_1','NAME_CONTRACT_TYPE','NAME_FAMILY_STATUS_Civil marriage',
#'NAME_FAMILY_STATUS_Married',
#'NAME_FAMILY_STATUS_Separated',
#'NAME_FAMILY_STATUS_Single / not married',
#'NAME_FAMILY_STATUS_Unknown',
#'NAME_FAMILY_STATUS_Widow']]


# df1['AGE']= (df1['DAYS_BIRTH'].values / -365).astype(int)
# df1['TAUX_ENDETTEMENT']=df1['AMT_CREDIT']/df1['AMT_INCOME_TOTAL']
# df1['CAPACITE_REMBOURSEMENT']=df1['AMT_INCOME_TOTAL']*0.35-df1['AMT_ANNUITY']
# df1['DAYS_EMPLOYED_PERCENT'] = df1['DAYS_EMPLOYED'] / df1['DAYS_BIRTH']

# df2=pd.read_csv('ytrain.csv', nrows=100, index_col='SK_ID_CURR')
with open("lgbm.pickle", "rb") as file:
    LGB = pickle.load(file)


@app.route("/")
def hello():
    return "Prêt à dépenser"


@app.route("/dashboard", methods=["GET"])
def dashboard():
    data = df
    content = json.loads(data.to_json())

    return jsonify({"status": "ok", "data": content})


# Récupération de l'identifiant client et prédictions
@app.route("/predict/<id_client>", methods=["GET"])
def predict(id_client):
    print(df.head(5))
    id_client = int(id_client)
    clt = df[df.index == id_client]
    print(clt)
    clt2 = json.loads(clt.to_json())

    # Prédictions
    predic = 100 * LGB.predict_proba(clt)
    print(predic)
    return jsonify({"client": clt2, "prediction": predic[0][1]})


# Lancement de l'appli
if __name__ == "__main__":
    app.run()
